name: Build and Push to Docker Hub

on:
  push:
    branches:
      - main  # Adjust this to match the branch you want to trigger the build.

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    steps:
    - name: Check out the repository
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Read current Version
      id: read_version
      run: |
        VERSION=$(cat VERSION)
        echo "::set-output name=version::$VERSION"
        
    - name: Increment Version and Set Output
      id: versioning
      run: |
        IFS='.' read -ra VERSION <<< "0.0.0"
        echo "Read VERSION array: ${VERSION[*]}"
        PATCH=${VERSION[2]}
        let PATCH++
        echo "Incremented PATCH: $PATCH"
        NEW_VERSION="${VERSION[0]}.${VERSION[1]}.$PATCH"
        echo "New VERSION: $NEW_VERSION"
        echo "$NEW_VERSION" > VERSION
        echo "::set-output name=new_version::$NEW_VERSION"

    - name: Extract repository name
      id: repo_name
      run: |
        REPO_NAME="${GITHUB_REPOSITORY#*/}"
        echo "::set-output name=name::$REPO_NAME"

    - name: Build and push the Docker image version
      uses: docker/build-push-action@v2
      with:
        context: .
        file: Dockerfile
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ steps.repo_name.outputs.name }}:${{ steps.inc_patch.outputs.new_version }}

    - name: Build and push the Docker image latest
      uses: docker/build-push-action@v2
      with:
        context: .
        file: Dockerfile
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ steps.repo_name.outputs.name }}:latest


    - name: Update VERSION file (Optional)
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Actions"
        git add VERSION
        git commit -m "Update version to ${{ steps.inc_patch.outputs.new_version }}"
        git push
